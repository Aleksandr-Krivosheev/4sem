     1. Технологии разработки печатных плат (однослойные, двухсторонние, МПП).
Печатные платы – это элементы конструкции, которые состоят из плоских проводников в виде участков металлизированного покрытия, размещённых на диэлектрическом основании и обеспечивающих соединение элементов электрической цепи. Они получили широкое распространение в производстве модулей, ячеек и блоков РЭА.
Достоинства печатных плат
    • Увеличение плотности монтажных соединений и возможность микроминиатюризации изделий.
    • Гарантированная стабильность и повторяемость электрических характеристик
    • Повышенная стойкость к климатическим и механическим воздействиям
    • Унификация и стандартизация конструктивных и технологических решений
    • Увеличение надёжности 
    • Возможность комплексной автоматизации монтажно-сборочных и контрольно-регулировочных работ
Элементами печатной платы являются
    • Диэлектрическое основание (подложка)
    • Металлическое покрытие в виде рисунка печатных проводников и контактных площадок (трассы)
    • Монтажные и фиксирующие отверстия
    • Контактные площадки-участки металлического покрытия, которые соединяют печатные проводники с металлизацией монтажных отверстий.
Односторонние печатные платы. За один технологический цикл получается вся конструкция с монтажными отверстиями и специальными углублениями для расположения элементов, монтируемых на поверхности платы.
Двусторонние печатные платы. Два слоя. Электрическая связь слоёв печатного монтажа осуществляется с помощью расположенных на плате металлизированных отверстий. Двусторонние ПП обладают повышенной плотностью монтажа и надёжностью соединений. Они используются в измерительной технике, системах управления и автоматического регулирования.
Многослойные печатные платы. Состоят из чередующихся слоёв изоляционного материала и проводящего рисунка, соединённых клеевыми прокладками в монолитную структуру путём прессования. Электрическая связь между проводящими слоями выполняется специальными объёмными деталями, печатными элементами или химико-гальванической металлизацией. По сравнению с ОПП и ДПП они характеризуются повышенной надёжностью и плотностью монтажа, устойчивостью к механическим и климатическим воздействиям, уменьшением размеров.
Методы изготовления печатных плат.
Субтрактивный – в качестве основания для печатного монтажа используют фольгированные диэлектрики, на которых формируется проводящий рисунок путём удаления фольги с непроводящих участков.
Аддитивные методы – основаны на избирательном осаждении токопроводящего покрытия на диэлектрическое основание, на которое предварительно может наноситься слой клеевой композиции.

    2. Модели схем в конструкторском проектировании. Модели элементов, модели цепей. Примеры.
Модели схемы традиционно граф, но вид графа, ориентированный он или нет, обычный или мультиграф (граф, где пара вершин соединяется более чем одним ребром), полный граф (граф, где каждая вершина соединена со всеми остальными) или гиперграф (граф, в котором одно ребро содержит множество вершин) – всё это связано с решаемой задачей.
Модели схем для разных задач конструирования должны удовлетворять разным требованиям. Универсальная модель утяжеляет алгоритмы автоматизации. Обычно рассматривают модели элементов и модели цепей.
Традиционно в качестве модели элемента рассматривают вершину графа, если необходимо учитывать контакты элементов, то для двухконтактных элементов модель – это отрезок, соединяющий две вершины. Для многополюсных элементов, где контактов много, моделью элемента является звезда, в центре звезды – вершина элемент, по периферии от центра к вершинам – контактам элемента проводятся отрезки лучи. Иногда используется более жёсткая конструкция для многополюсных элементов – многоугольник – число вершин равно числу контактов элемента, в центре многоугольника сам элемент, который соединён ребром с каждой вершиной – контактом элемента.
Модели цепей. Часто – это ребро, если есть соединение между элементами ребро есть, ребро отсутствует, когда нет соединения. Такая модель не учитывает, что два элемента могут быть связаны по разным контактам разными электрическими цепями, чтобы это учесть вводили смежные рёбра, то есть моделью схемы являлся мультиграф. Однако, мультиграф не учитывал специфику цепи, объединяющей несколько контактов, здесь вообще контакты не учитывались.

    3. Задача компоновки, классификация, критерии. Используемые модели, в задаче компоновки.
Компоновка – это назначение элементов в корпуса и назначение корпусов на платы.

    4. Алгоритмы компоновки, классификация. Последовательный алгоритм разрезания мультиграфа.


    5. Итерационные алгоритмы компоновки. Пример.
Варианты итерационных алгоритмов:
    1. Алгоритмы парных перестановок.
    2. Алгоритмы групповых перестановок.
В первом случае в графе, разрезанном на подграфы (части), производится парная перестановка элементов из разных подграфов с проверкой на каждом шаге приращения числа рёбер, соединяющих части. Цель итерации – минимизация числа соединяющих рёбер.
Во втором случае перестановки идут между группами элементов.
Итерационный алгоритм включает следующие шаги:
    1. Из множества подграфов разрезания выделяют два любых G1(X1,U1) и G2(X2,U2). Для каждой пары вершин  и  оценивается разность между числом новых внешних связей (после перестановки) и старых до перестановки △S = Sпосле – Sдо.
    2. Те пары  и , для которых △S<0 заносятся в список кандидатов для обмена.
    3. Из списка выбирается та пара, для которой |△S| максимально, если таких несколько, то переставляется любая пара.
    4. Переставленные пары отмечаются и больше в перестановке не участвуют.
    5. Для вновь выбранных подграфов повторяется процесс из п.1.
    6. Повторяются п.п. 2, 3, 4 до тех пор, пока в списке замен не будет пар, для которых △S<0 (или по времени, или по числу итераций).
    7. Далее устраняются все метки вершин G1 и G2, выбирается другая пара подграфов и повторяются п.п. 1-6, то есть минимизируется число соединений для вновь выбранных подграфов. Процесс продолжается до тез пор, пока не будет сделана перестановка во всех парах подграфов графа G(X, U). 

    6. Гиперграф как модель схемы в алгоритмах разрезания. Сравнение с моделью мультиграфа.


    7. Формализация задачи разрезания гиперграфа.


    8. Алгоритм последовательного разрезания на блоки (модель схемы гиперграф).


    9. Задача компоновки. Алгоритмы покрытия. Классификация.
Задача покрытия.
Первым этапом технического проектирования печатных плат является задача распределения базовых элементов (БЭ) логической схемы по корпусам микросхем (ИС). Её можно решать в такой последовательности:
    • Определить оптимальный набор ИС для проектирования схемы из числа разрешённых на данном предприятии.
    • Распределить БЭ по корпусам ИС таким образом, чтобы минимизировать число межмодульных связей.
Мы рассмотрим случай, когда оптимальный набор есть. Это задача покрытия. 
    • Исходная схема представляет собой множество связанных функциональных элементов И, ИЛИ, НЕ, триггеров, усилителей, генераторов и т.д. Каждый функциональный элемент реализует некоторую функцию. Их множество определяет совокупность всех функций, выполняемых в схеме.
    • Схема представляется взвешенным графом G(X, U), где Х – множество вершин элементов, U – рёбер, каждой вершине ставится в соответствие вес, соответствующий выполняемой функции. Задан ограниченный набор (библиотека) типов модулей N = {n1, n2, … , np}, где p – число типов конструктивных модулей в библиотеке (ячеек, ИС, ЭРЭ ПЛИС, ГИС, БИС). Здесь ni – количество элементов i-го типа. Каждый из группы модулей реализует одну или несколько функций (имеет определённый заранее состав функциональных элементов). Эти функции соответствуют по функционалу тем, которые в схеме.
    • Каждый конструктивный модуль из библиотеки можно представить подграфом Gi=n (Yi, Ui), в котором вершины отображают функциональный элементы, входящие в модуль. Рёбра Ui – реально могут быть или отсутствовать, если это модули-наборы, как, например, в ПЛИС.
    • Требуется разбить исходную схему, то есть граф G(X, U) на подграфы Gi(Xi,Ui) изоморфные Gi(Yi,Ui). При выполнении следующих условий:
    1. Каждая подсхема Gi(Xi,Ui) по своему функциональному составу должна соответствовать некоторому модулю Gi(Yi,Ui)
    2. Любые две подсхемы G(X,U) не пересекаются.
Оценка качества покрытия: число типов модулей, используемых для покрытия должно быть минимально, а полнота использования конструктивных модулей максимальна, общее число всех модулей для покрытия минимально.
Эвристический алгоритм задачи покрытия
Для каждого подграфа Gi(Xi,Ui) – он соответствует некоторой микросхеме, в графе G(X,U) ищут изоморфные подграфы, найденные подграфы удаляются из графа G, если после этого остаются непокрытые части Hj, то задача далее решается для каждой части отдельно. Процесс продолжается до тех пор, пока вся схема не окажется покрытой модулями из заданного набора. Качество покрытия как всегда в последовательных алгоритмах зависит от порядка выбора элементов из библиотеки модулей. Улучшение покрытия возможно итерационным алгоритмом.


    10. Последовательно - приближенный алгоритм покрытия схемы по шагам (связные модули).
Приближённый алгоритм покрытия связными модулями по шагам.
    1. Ранжирование схемы.
    2. Выбор начального элемента.
    3. Выбор покрывающего блока.
    4. Выбор элемента в покрывающем блоке.
    5. Построение единичной окрестности вокруг покрывающего и покрываемого элементов.
    6. Определение пересечения окрестностей. Если пустое, то к п.7, иначе проверка корректности пересечения с точки зрения функционирования схемы, хватит ли выводов, все ли цепи покрываемой схемы могут быть реализованы. Если пересечение некорректно, то к п.7, иначе запоминаем его. Запоминаем пересечение, если модуль не исчерпан, то к п.4, если исчерпан, то к п.8.
    7. Если покрывающий блок использован не полностью, то к п.4, иначе к п.9.
    8. Выбор наилучшего пересечения из числа запомненных пересечений.
    9. Если схема ещё не покрыта, то к п.2, иначе конец.

    11. Покрытие схемы модулями “россыпью”.
Если есть множество модулей G1, G2, … , Gm. Каждый из этих модулей состоит из несвязанных функциональных частей Gi = {g1, g2, … , gn}, в модулях функциональные элементы могут повторяться. Задача покрытия сводится
    1. Определение вспомогательного набора покрывающих элементов из всех модулей {Gi}, то есть подбираются модули, содержащие gi, подходящего типа для покрытия функциональных элементов исходной схемы.
    2. Решается задача покрытия схемы блоками из вспомогательного набора b1, b2, … , bn, для чего определяется, сколько каких блоков необходимо взять, чтобы были покрыты соответствующие функциональные схемы. Эта задача решается последовательным алгоритмом. Результатом решения является схема, элементами который являются блоки вспомогательного набора b1, b2, … , bn. Каждое значение b1 вспомогательного набора показывает, сколько надо в схеме иметь блоков типа b1.
    3. Так как типы блоков в разных модулях библиотеки могут повторяться, то следующей задачей является определение количества библиотечных модулей из множества библиотечных модулей {Gj} каждого типа, которые надо иметь, чтобы решить с их помощью задачу покрытия схемы. При этом минимизируется суммарная стоимость используемых модулей.

    12. Размещение элементов. Классификация алгоритмов размещения и критерии качества.
Размещение – это определение местоположения элементов на коммутационном поле (КП) конструктивного модуля, такого, при котором создаются наилучшие условия для решения последующей задачи трассировки соединений с учётом конструкторско-технологических требований и ограничений.
Типы алгоритмов размещения:
    • Силовые. Процесс размещения элементов на плате представляется как движение к состоянию равновесия системы материальных точек (элементов), на каждую из которых действуют силы притяжения и отталкивания, интерпретирующие связи между размещаемыми элементами. Задача оптимального размещения элементов сводится к нахождению такого местоположения точек, при котором равнодействующие всех сил обращаются в ноль.
    • Последовательные. Они основаны на допущении, что для получения оптимального размещения необходимо в соседних позициях располагать элементы, максимально связанные друг с другом. Сущность этих алгоритмов состоит в последовательном закреплении заданного набора конструктивных элементов на коммутационной плате относительно ранее установленных.
    • Итерационные. Для улучшения исходного размещения элементов на плате вводят итерационный процесс перестановки местами пар элементов. В итерационном алгоритме парных перестановок каждый элемент меняется с каждым другим и оценивается уменьшается ли при этом средняя длина соединений, фиксируется та перестановка, которая даёт максимальное уменьшение.
Основной критерий качества.
Наиболее часто используется критерий минимальной суммарной длины.
Расстояния при этом могут рассчитываться по следующим формулам: 
dij = , что соответствует прокладке соединения по кратчайшему пути. 
Dij = || + || - когда соединения прокладываются по каналам и магистралям параллельно осям коориднат.

    13. Последовательно-итерационный алгоритм размещения. Последовательный этап. Пример.
На первом этапе последовательно по известной схеме соединений, заданной мультиграфом и перечню номеров элементов, которые назначены на данную плату в результате решения задачи разрезания, заполняются установочные места на плате. Плата задаётся числом посадочных мест и матрицей расстояний между заданными на плате установочными местами. На каждом шаге последовательного алгоритма выбирается пара, позиция-элемент с учётом связей между элементами и оценкой суммарной длины соединений для каждой позиции кандидата для размещения очередного элемента на позицию. Этап заканчивается, когда все элементы размещены.
Заполнение монтажного пространства
Размещение производится с помощью оценки коэффициента связность K(Vi), элемента – кандидата на размещение Vi с ранее размещёнными на плате элементами, определяемого по формуле:
K(Vi) = p (vi ∈ Vразм) - p (vi ∈ Vост) = 2 p (vi ∈ Vразм) – P(Vi) = 2 – p(vi)
    •  – число связей элемента Vi с подмножеством размещённых вершин Vразм
    • p (vi ∈ Vост) – число связей элемента Vi с подмножеством оставшихся вершин, оно равно P(Vi) - p (vi ∈ Vразм)
    • Jразм – множество размещённых вершин
    • p (vi) – степень вершины Vi
В любую свободную позицию размещаются один (первый) конструктивный элемент, далее производится размещение элементов с максимальными значениями коэффициента связности в очередных свободных позициях. Обычно сначала рассматриваются позиции вокруг размещённых элементов. 
Например: K1(V2) = 2S21 – P(V2) = …
S21 – количество рёбер между вершинами V1 и V2
P(V2) – степень вершины V2 (общее количество рёбер, входящих в V2)


    14. Последовательно-итерационный алгоритм размещения. Итерационный этап. Пример.
На втором этапе проводится перестановка элементов с целью минимизации выбранного критерия оптимальности.
                1. Зададим множество конструктивных элементов V и связи между ними графом G(V,R), с помощью матрицы смежности S = {Sij} n × n, где n – число элементов на плате.
                2. Монтажное пространство задаётся множеством установочных мест T в виде матрицы длин L или списка координат позиций. Некоторые элементы могут быть закреплены за отдельными позициями.
Найдём элемент, который имеет максимальную среднюю длину соединений относительно того места, где он находится. Определим среднюю длину связи элемента Vi, расположенного в позиции tk.
Lvi(tk) =  – это средняя длина связей между элементами i, j, размещённых соответственно в позициях k и позиции r, тогда для элемента V1, размещённого в позиции t1 средняя длина определяется по формуле:
Lv1(t1) = 
l – расстояние между элементами (считается по осям x и y)
Считаем длину связи для всех элементов, выбираем тот, у которого она наибольшая (Vc)
Считаем его координаты его центра тяжести:
Xi(Vk) = 
Yi(Vk) = 
Где X и Y – заданы на плате 
Подставляем элемент в позицию с полученными координатами, если их несколько меняют сначала с одним и считают новую его среднюю длину, потом также с другим, после чего оценивается изменения средней длины от перестановки:
∆L(Vq, Vc) = Lvq(Tq) - Lvq(Tc(c)) + Lvc(Ti) - Lvc(Tk(q))
Перестановки заканчиваются, когда нет уменьшения длин связей.

    15. Алгоритмы трассировки. Общая характеристика задачи, зависимость критериев качества от технологии реализации элементов.


    16. Алгоритм Прима. Компьютерный алгоритм, пример по шагам.


    17. Формализация задачи трассировки. Коммутационное поле и размер дискрета,  соседство, приоритет координат, функции качества алгоритма. Классификация алгоритмов.


    18. Волновой алгоритм, исходные данные, основные шаги. Пример. Достоинства и недостатки волнового алгоритма.


    19. Основные составляющие волнового алгоритма, позволяющие учитывать заданные ограничения разработчика схемы.  Соседство, путевые координаты, весовые функции. Примеры. Способы улучшения волнового алгоритма.


    20. Построение путей волновым алгоритмом по заданным параметрам (мин изгибов, мин пересечений и т.д.)


    21. Топологическая и гибкая трассировка достоинства и недостатки. Модель схемы в гибкой трассировке.


    22. Многослойная трассировка. МПП с открытыми контактными площадками. Основные задачи автоматизации. Отличия по сравнению с МПП.


    23.  Графо-теоретический подход к трассировке. Модели элементов. Основные решаемые задачи.

